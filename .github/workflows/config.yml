name: Rocktee_Build

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build_on_linux:
    name: Compile and Build 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ x86_64-unknown-linux-musl,
                  x86_64-pc-windows-gnu,
                  aarch64-unknown-linux-musl,
                  armv7-unknown-linux-musleabihf, 
                  aarch64-linux-android
                  ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}
      - name: Create binnary package 
        run: |
          mkdir rocktee-${{ matrix.target }}
          mv target/${{ matrix.target }}/release/rocktee* rocktee-${{ matrix.target }}/
          mv LICENSE rocktee-${{ matrix.target }}/
          mv README.md rocktee-${{ matrix.target }}/
          tar cvfJ rocktee-${{ matrix.target }}.tar.xz \
                      rocktee-${{ matrix.target }}
  
  release:
    name: Release source codes and binnary builds
    needs: build_on_linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ x86_64-unknown-linux-musl,
                  x86_64-pc-windows-gnu,
                  aarch64-unknown-linux-musl,
                  armv7-unknown-linux-musleabihf, 
                  aarch64-linux-android
                  ]
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: rocktee-${{ matrix.target }}.tar.xz
          asset_name: rocktee-${{ matrix.target }}.tar.xz
          asset_content_type: application/zip
